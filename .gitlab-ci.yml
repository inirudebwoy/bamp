default:
  before_script:
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
    - export PATH=$PATH:$HOME/.poetry/bin
    - export POETRY_VIRTUALENVS_PATH=$CI_PROJECT_DIR/.cache/poetry/virtualenvs
    - export POETRY_CACHE_DIR=$CI_PROJECT_DIR/.cache/poetry
    - poetry config --list

stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

test-py36:
  stage: test
  image: python:3.6
  cache:
    paths:
      - .tox/py36
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - pip install "tox>3,<4"
    - tox -e py36

test-py37:
  stage: test
  image: python:3.7
  cache:
    paths:
      - .tox/py37
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - pip install "tox>3,<4"
    - tox -e py37

test-py38:
  stage: test
  image: python:3.8
  cache:
    paths:
      - .tox/py38
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - pip install "tox>3,<4"
    - tox -e py38

test-py39:
  stage: test
  image: python:rc
  allow_failure: true
  cache:
    paths:
      - .tox/py39
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - pip install "tox>3,<4"
    - tox -e py39

build-wheel:
  stage: build
  image: python:3.8
  only:
    - /^v\d+\.\d+\.\d+$/ # eg. "v1.2.3", "v1.0.12" etc.
  except:
    - branches
  environment:
    name: pypi
  cache:
    paths:
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - poetry build
    - python -m pip install pipx
    - pipx install dist/*.whl
    - ~/.local/bin/bamp -h
    - echo $?
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - dist/*.whl

build-sdist:
  stage: build
  image: python:3.8
  only:
    - /^v\d+\.\d+\.\d+$/ # eg. "v1.2.3", "v1.0.12" etc.
  except:
    - branches
  environment:
    name: pypi
  cache:
    paths:
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - poetry build
    - python -m pip install pipx
    - pipx install dist/*.tar.gz
    - ~/.local/bin/bamp -h
    - echo $?
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - dist/*.tar.gz

publish:
  stage: deploy
  image: python:3.8
  only:
    - /^v\d+\.\d+\.\d+$/ # eg. "v1.2.3", "v1.0.12" etc.
  except:
    - branches
  environment:
    name: pypi
  cache:
    paths:
      - .cache/pip
      - venv/
      - .cache/pypoetry
  script:
    - poetry publish --username $POETRY_PYPI_USERNAME --password $POETRY_PYPI_PASSWORD
